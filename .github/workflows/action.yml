name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Create JAR file
        run: ./gradlew bootJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: board-application
          path: build/libs/*.jar

      - name: Build info
        run: |
          echo "Build completed successfully!"
          echo "JAR files created:"
          ls -la build/libs/

  deploy-local-windows:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Download JAR artifacts
        uses: actions/download-artifact@v4
        with:
          name: board-application
          path: ./artifacts

      - name: Upload JAR to Windows local PC
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.LOCAL_HOST }}
          username: ${{ secrets.LOCAL_USERNAME }}
          key: ${{ secrets.LOCAL_SSH_KEY }}
          port: ${{ secrets.LOCAL_SSH_PORT }}
          source: "./artifacts/*.jar"
          target: "C:\\Users\\${{ secrets.LOCAL_USERNAME }}\\Board_JPA-master\\artifacts"
          debug: true

      - name: Execute PowerShell deployment on Windows
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.LOCAL_HOST }}
          username: ${{ secrets.LOCAL_USERNAME }}
          key: ${{ secrets.LOCAL_SSH_KEY }}
          port: ${{ secrets.LOCAL_SSH_PORT }}
          script: |
            Write-Host "========================================"
            Write-Host "Executing Windows Deployment Script"
            Write-Host "========================================"
            Write-Host "Date: $(Get-Date)"
            Write-Host "Host: $(hostname)"

            $deployPath = "C:\Users\${{ secrets.LOCAL_USERNAME }}\Board_JPA-master\artifacts"
            Set-Location $deployPath

            if (Test-Path ".\deploy-local.ps1") {
                Write-Host "Running deploy-local.ps1..."
                powershell -ExecutionPolicy Bypass -File ".\deploy-local.ps1"
            } else {
                Write-Host "ERROR: deploy-local.ps1 not found!"
                exit 1
            }

            Write-Host "Windows deployment script execution completed!"


  # SSH를 통한 원격 배포 (주석처리)
  # deploy-local-ssh:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/master'
  #
  #   steps:
  #     - name: Download JAR artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: board-application
  #         path: ./artifacts
  #
  #     - name: Deploy to local PC via SSH
  #       uses: appleboy/ssh-action@v0.1.5
  #       with:
  #         host: ${{ secrets.LOCAL_HOST }}
  #         username: ${{ secrets.LOCAL_USERNAME }}
  #         key: ${{ secrets.LOCAL_SSH_KEY }}
  #         port: ${{ secrets.LOCAL_SSH_PORT }}
  #         script: |
  #           # SSH 스크립트 내용 (주석처리)
  #
  #     - name: Upload JAR to local PC
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ secrets.LOCAL_HOST }}
  #         username: ${{ secrets.LOCAL_USERNAME }}
  #         key: ${{ secrets.LOCAL_SSH_KEY }}
  #         port: ${{ secrets.LOCAL_SSH_PORT }}
  #         source: "./artifacts/*.jar"
  #         target: "/tmp/artifacts"
  #         strip_components: 0




